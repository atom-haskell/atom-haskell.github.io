<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Overviews on Atom-Haskell</title>
    <link>https://atom-haskell.github.io/overview/index.xml</link>
    <description>Recent content in Overviews on Atom-Haskell</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 12 Mar 2017 23:52:44 +0300</lastBuildDate>
    <atom:link href="https://atom-haskell.github.io/overview/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Overview</title>
      <link>https://atom-haskell.github.io/overview/</link>
      <pubDate>Sun, 12 Mar 2017 23:52:44 +0300</pubDate>
      
      <guid>https://atom-haskell.github.io/overview/</guid>
      <description>

&lt;h3 id=&#34;chapter-i&#34;&gt;Chapter I&lt;/h3&gt;

&lt;h1 id=&#34;overview&#34;&gt;Overview&lt;/h1&gt;

&lt;p&gt;Welcome to Atom-Haskell project! We aim to bring awesome &lt;a href=&#34;http://haskell.org&#34;&gt;Haskell&lt;/a&gt; support to the amazing &lt;a href=&#34;http://atom.io&#34;&gt;Atom&lt;/a&gt; editor.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Features</title>
      <link>https://atom-haskell.github.io/overview/features/</link>
      <pubDate>Mon, 13 Mar 2017 00:05:13 +0300</pubDate>
      
      <guid>https://atom-haskell.github.io/overview/features/</guid>
      <description>

&lt;h4 id=&#34;sytnax-highlighting&#34;&gt;Sytnax highlighting&lt;/h4&gt;

&lt;p&gt;Grammars:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Haskell (*.hs)&lt;/li&gt;
&lt;li&gt;Literate Haskell (*.lhs)&lt;/li&gt;
&lt;li&gt;Cabal (*.cabal)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/7275622/8120540/f16d7ee6-10a8-11e5-9b9d-223ff05a54c6.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;errors-warnings-and-lints&#34;&gt;Errors, warnings and lints&lt;/h4&gt;

&lt;p&gt;After saving the current file the check and linter processes will be executed.
After processes are finished, the results can be seen in output panel. You can
see different kind of results by switching Errors, Warnings and Lints tab
buttons. If you click on message&amp;rsquo;s file name in output panel, Atom will open
this file and put cursor near problem that triggered output message.&lt;/p&gt;

&lt;p&gt;Check results can also be seen in left editor gutter (near line numbers) as
icons. If you hover mouse pointer over such an icon, a tooltip will be shown
with problem description. Results are highlighted inside editor as well, so you
can easily determine where the problem is.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/7275622/9705079/52b38f7c-54c1-11e5-9b23-6b932100e876.gif&#34; alt=&#34;errors&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;get-type-info&#34;&gt;Get type/info&lt;/h4&gt;

&lt;p&gt;If you have &lt;code&gt;haskell-ghc-mod&lt;/code&gt; or similar package installed, you can get type of any expression and get info on any symbol.&lt;/p&gt;

&lt;p&gt;There are two options to do so.&lt;/p&gt;

&lt;p&gt;First one is to hover mouse pointer over any Haskell source in editor, or any
selection. By default, this will show type for expression/selecton under cursor.
You can change this behavior to show info for symbol, or disable it completely
in IDE-Haskell settings.&lt;/p&gt;

&lt;p&gt;Another option is to use keyboard to get type/info under cursor. No default
bindings are specified, but you can specify them in your Atom keymap.&lt;/p&gt;

&lt;p&gt;See &lt;a href=&#34;#configuration&#34;&gt;Configuration&lt;/a&gt; for more information.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/7275622/9705082/52daa81e-54c1-11e5-88a8-99c8029eb14e.gif&#34; alt=&#34;typeinfo&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/7275622/9705080/52cd7e64-54c1-11e5-8ee3-120641da2f85.gif&#34; alt=&#34;typeins&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;autocompletion&#34;&gt;Autocompletion&lt;/h4&gt;

&lt;p&gt;You can show auto-completions for hole &lt;code&gt;_&lt;/code&gt;. This will try to find replacements
based on type. It&amp;rsquo;s no magic though, so if hole has some crazy type, it won&amp;rsquo;t
find anything. You can also refine hole completions based on name by using named holes, e.g. &lt;code&gt;_from&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Current autocompletion scopes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Import module name&lt;/li&gt;
&lt;li&gt;Import module symbols&lt;/li&gt;
&lt;li&gt;Language pragmas&lt;/li&gt;
&lt;li&gt;OPTIONS_GHC pragma&lt;/li&gt;
&lt;li&gt;Type name&lt;/li&gt;
&lt;li&gt;Class name&lt;/li&gt;
&lt;li&gt;Symbol name&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Autocompletion:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/7275622/9704861/e4474ec4-54bc-11e5-92f4-84a3995e45cb.gif&#34; alt=&#34;autocomplete&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Import autocompletion:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/7275622/9704865/ff39f79a-54bc-11e5-9912-5fb2884b749b.gif&#34; alt=&#34;import&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Hole autocompletion:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/7275622/9704890/5581ccae-54bd-11e5-8ec6-8aa289e5a099.gif&#34; alt=&#34;hole&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;code-beautify&#34;&gt;Code beautify&lt;/h4&gt;

&lt;p&gt;You can use &lt;code&gt;stylish-haskell&lt;/code&gt; utility to indent pragmas, imports and data type
definitions. Simply select &lt;code&gt;Prettify&lt;/code&gt; from Haskel IDE menu to apply
&lt;code&gt;stylish-haskell&lt;/code&gt; to current file.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/7275622/9705081/52d97cf0-54c1-11e5-94f0-96f09e43ada3.gif&#34; alt=&#34;prettify&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;build-and-test-project&#34;&gt;Build and test project&lt;/h4&gt;

&lt;p&gt;If you have &lt;code&gt;ide-haskell-cabal&lt;/code&gt; or similar package installed, you can build,
clean and test your project from ide-haskell (stack and cabal supported)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Requirements</title>
      <link>https://atom-haskell.github.io/overview/requirements/</link>
      <pubDate>Mon, 13 Mar 2017 00:05:13 +0300</pubDate>
      
      <guid>https://atom-haskell.github.io/overview/requirements/</guid>
      <description>

&lt;p&gt;The Atom-Haskell packages assume that you have a minimal Haskell toolchain
installed on your system. You can install this toolchain by following the
instructions here:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.haskell.org/downloads#minimal&#34;&gt;Minimal Haskell installers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;core-atom-haskell-packages&#34;&gt;Core Atom-Haskell packages&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://atom.io/packages/language-haskell&#34;&gt;&lt;code&gt;language-haskell&lt;/code&gt;&lt;/a&gt; &amp;ndash; Syntax highlighting and Haskell autodetection &lt;strong&gt;ABSOLUTELY REQUIRED!&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://atom.io/packages/ide-haskell&#34;&gt;&lt;code&gt;ide-haskell&lt;/code&gt;&lt;/a&gt; &amp;ndash; GUI and minimal utilities &lt;strong&gt;ABSOLUTELY REQUIRED!&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://atom.io/packages/ide-haskell-cabal&#34;&gt;&lt;code&gt;ide-haskell-cabal&lt;/code&gt;&lt;/a&gt; &amp;ndash; Build Haskell projects with either &lt;code&gt;cabal&lt;/code&gt; or &lt;code&gt;stack&lt;/code&gt;. Reports errors/warnings on build.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://atom.io/packages/haskell-ghc-mod&#34;&gt;&lt;code&gt;haskell-ghc-mod&lt;/code&gt;&lt;/a&gt; &amp;ndash; &lt;code&gt;ghc-mod&lt;/code&gt; integration. Typecheck and lint sources without building, query type information and more.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://atom.io/packages/autocomplete-haskell&#34;&gt;&lt;code&gt;autocomplete-haskell&lt;/code&gt;&lt;/a&gt; &amp;ndash; Autocompletion support. This plugin depends on &lt;code&gt;haskell-ghc-mod&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;extra-atom-haskell-packages&#34;&gt;Extra Atom-Haskell packages&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://atom.io/packages/haskell-pointfree&#34;&gt;&lt;code&gt;haskell-pointfree&lt;/code&gt;&lt;/a&gt; &amp;ndash; convert selection to pointfree/pointful representation&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://atom.io/packages/ide-haskell-hasktags&#34;&gt;&lt;code&gt;ide-haskell-hasktags&lt;/code&gt;&lt;/a&gt; &amp;ndash; go to declaration, list all symbols defined in file/project&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://atom.io/packages/ide-haskell-hoogle&#34;&gt;&lt;code&gt;ide-haskell-hoogle&lt;/code&gt;&lt;/a&gt; &amp;ndash; lookup hoogle documentation via local hoogle database&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://atom.io/packages/ide-haskell-profiteurjs&#34;&gt;&lt;code&gt;ide-haskell-profiteurjs&lt;/code&gt;&lt;/a&gt; &amp;ndash; display GHC profiling results in Atom&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://atom.io/packages/ide-haskell-repl&#34;&gt;&lt;code&gt;ide-haskell-repl&lt;/code&gt;&lt;/a&gt; &amp;ndash; GHCi REPL in Atom&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://atom.io/packages/language-haskell-scoped&#34;&gt;&lt;code&gt;language-haskell-scoped&lt;/code&gt;&lt;/a&gt; &amp;ndash; highlight known identifiers in editor&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;binary-dependencies&#34;&gt;Binary dependencies&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jaspervdj/stylish-haskell&#34;&gt;&lt;code&gt;stylish-haskell&lt;/code&gt;&lt;/a&gt; or &lt;a href=&#34;https://github.com/commercialhaskell/hindent&#34;&gt;&lt;code&gt;hindent&lt;/code&gt;&lt;/a&gt; &amp;ndash; prettify/format your source code. Used by &lt;code&gt;ide-haskell&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/DanielG/ghc-mod&#34;&gt;&lt;code&gt;ghc-mod&lt;/code&gt;&lt;/a&gt; &amp;ndash; backend that does heavy lifting. Used by &lt;code&gt;haskell-ghc-mod&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/MarcWeber/hasktags&#34;&gt;&lt;code&gt;hasktags&lt;/code&gt;&lt;/a&gt; &amp;ndash; indexes your sources for easy navigation. Used by &lt;code&gt;ide-haskell-hasktags&lt;/code&gt; (Optional)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://hackage.haskell.org/package/pointfree&#34;&gt;&lt;code&gt;pointfree&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://hackage.haskell.org/package/pointful&#34;&gt;&lt;code&gt;pointful&lt;/code&gt;&lt;/a&gt; &amp;ndash; convert source to pointfree or pointful representation. Used by &lt;code&gt;haskell-pointfree&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://hackage.haskell.org/package/hoogle&#34;&gt;&lt;code&gt;hoogle&lt;/code&gt;&lt;/a&gt; &amp;ndash; Haskell API search engine. Used by &lt;code&gt;ide-haskell-hoogle&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>